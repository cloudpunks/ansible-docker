# Standards: 1.2
---
# @var docker_registries:description: List of docker registries to auto login
# @var docker_registries:example: >
# docker_registries:
#   - registry: myregistry.example.com
#     username: docker
#     password: secure
#     email: docker@example.com
#     reauthorize: False
#     state: present
# @end
docker_registries: []

# @var docker_upstream_version:description: Install from upstream repository
docker_upstream_version: True

# @var docker_daemon_command:description: Inject a service override into systemd
docker_daemon_override: False

# @var docker_daemon_command:description: Command executed to start the daemon
docker_daemon_command: /usr/bin/dockerd -H unix://

# @var docker_daemon_config:description: Add config options to daemon.json
docker_daemon_config:
  log-driver: json-file
  log-opts:
    max-size: 5m
    max-file: "3"
  live-restore: True

# @var docker_networks_general:description: List of general docker networks to create
# @var docker_networks_general:example: >
# docker_networks_general:
#   - name: traefik
#     driver: bridge
#     enable_ipv6: True
#     ipam_config:
#       - subnet: fdd1:ac8c:0557:7ce1::/64
#     force: False
#     state: present
# @end
docker_networks_general: []

# @var docker_networks_extra:description: List of extra docker networks to create
# @var docker_networks_extra:example: >
# docker_networks_extra:
#   - name: traefik
#     driver: bridge
#     enable_ipv6: True
#     ipam_config:
#       - subnet: fdd1:ac8c:0557:7ce1::/64
#     force: False
#     state: present
# @end
docker_networks_extra: []

# @var docker_arch:description: Target system architecture used to select correct deb repository
docker_arch: amd64

...
