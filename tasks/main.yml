# Standards: 1.2
---
- name: Create required dirs
  loop:
    - /etc/systemd/system/docker.service.d
    - /etc/docker
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  tags:
    - docker

- name: Download repo key
  when: docker_upstream_version
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present
  tags:
    - docker

- name: Add apt repository
  when: docker_upstream_version
  apt_repository:
    repo: "deb [arch={{ docker_arch }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    filename: docker
    update_cache: True
    state: present
  tags:
    - docker

- name: Install required packages
  loop:
    - "{{ 'docker-ce' if docker_upstream_version else 'docker.io' }}"
    - python3-docker
    - python3-distutils
  package:
    name: "{{ item }}"
    state: present
  tags:
    - docker

- name: Write service override
  when: docker_daemon_override
  notify:
    - Restart docker
  template:
    src: override.j2
    dest: /etc/systemd/system/docker.service.d/override.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - docker

- name: Write daemon config
  notify:
    - Restart docker
  copy:
    content: "{{ docker_daemon_config | to_nice_json }}"
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - docker

- name: Start docker service
  systemd:
    name: docker
    state: started
    daemon_reload: True
    masked: False
    enabled: True
  tags:
    - docker

- name: Create defined networks
  loop: "{{ docker_networks_general + docker_networks_extra }}"
  loop_control:
    label: "{{ item.name }}"
  docker_network:
    name: "{{ item.name }}"
    enable_ipv6: "{{ item.enable_ipv6 | default(False) }}"
    ipam_config: "{{ item.ipam_config | default([]) }}"
    force: "{{ item.force | default(omit) }}"
    state: "{{ item.state | default('present') }}"
  tags:
    - docker

- name: Handle registry login
  loop: "{{ docker_registries_general + docker_registries_extra }}"
  loop_control:
    label: "{{ item.url | default('hub.docker.com') }}"
  when: item.state | default('present') == 'present'
  register: docker_login_command
  changed_when: False
  failed_when: docker_login_command.rc != 0
  command:
    cmd: "docker login --username {{ item.username | quote }} --password-stdin {{ item.url | default('') }}"
    stdin: "{{ item.password }}"
  tags:
    - docker

- name: Handle registry logout
  loop: "{{ docker_registries_general + docker_registries_extra }}"
  loop_control:
    label: "{{ item.url | default('hub.docker.com') }}"
  when: item.state | default('present') == 'absent'
  docker_login:
    registry: "{{ item.url | default(omit) }}"
    state: absent
  tags:
    - docker

...
